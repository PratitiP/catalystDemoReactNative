name: Release ios beta

on:
  workflow_dispatch:
    inputs:
      select_build_type:
        type: choice
        description: 'Select build type'
        options:
          - '.ipa'
          - '.app'
          - 'both'
        required: true

env:
  KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

jobs:
  release-ios:
    runs-on: macos-12
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # - name: Restore buildcache
      #   uses: mikehardy/buildcache-action@v2

      - name: Setup yarn and caching dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install all dependencies
        run: yarn install --immutable

      # - name: Install ccache
      #   run: |
      #     brew install ccache
      #     ln -s $(which ccache) /usr/local/bin/gcc
      #     ln -s $(which ccache) /usr/local/bin/g++
      #     ln -s $(which ccache) /usr/local/bin/cc
      #     ln -s $(which ccache) /usr/local/bin/c++
      #     ln -s $(which ccache) /usr/local/bin/clang
      #     ln -s $(which ccache) /usr/local/bin/clang++
      #     echo $(which clang)

      # - name: Prepend ccache executables to the PATH
      #   run: |
      #     echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH

      # - name: Restore ccache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/Library/Caches/ccache
      #     key: cache-${{ runner.os }}-ccache-

      # - name: ccache
      #   uses: hendrikmuhs/ccache-action@v1
      #   with:
      #     max-size: '2.0G'

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          ccache_options: |
            max_size=2.0G
            compression=false
            compiler_check=content
            sloppiness=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros
            depend_mode=true
            file_clone=true
            inode_cache=true

      # - name: Configure ccache
      #   run: |
      #     ccache --set-config="compiler_check=content"
      #     ccache --set-config="sloppiness=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros"
      #     ccache --set-config="depend_mode=true"
      #     ccache --set-config="file_clone=true"
      #     ccache --set-config="inode_cache=true"
      #     ccache --show-config

      - name: pre - show ccache config
        run: |
          ccache -p
          ccache -s

      # - name: pre cache statastics
      #   run: ccache -s

      - name: Install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.7'

      - name: Select Xcode version
        run: sudo xcode-select -s '/Applications/Xcode_13.4.app/Contents/Developer'

      - name: Cache Pods
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: cache-${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}

      - name: Cache Gems
        uses: actions/cache@v3
        with:
          path: |
            vendor/bundle
          key: cache-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}

      - name: Install Fastlane
        run: |
          cd ios
          bundle config path vendor/bundle
          bundle install
          bundle update fastlane

      - name: Setup SSH Keys for git access
        run: |
          echo ${{ secrets.SSH_PRIVATE_KEY_B64 }} > ssh_private_key.b64
          base64 -d -i ssh_private_key.b64 > ios/ssh_private_key
          chmod 600 ios/ssh_private_key

      - name: Fetching certificate and profile
        run: |
          export MATCH_GIT_PRIVATE_KEY="./ssh_private_key"

          cd ios
          bundle exec fastlane certificates

      - name: Install cocoapods
        run: |
          cd ios
          pod install

      - name: Build ipa
        if: ${{ github.event.inputs.select_build_type != '.app' }}
        run: |
          cd ios
          time bundle exec fastlane build
        env:
          BUNDLE_VERSION: ${GITHUB_RUN_NUMBER}
          BUNDLE_SHORT_VERSION: ${{ github.event.inputs.bundle_short_version }}

      - name: Build app for simulator
        if: ${{ github.event.inputs.select_build_type != '.ipa' }}
        run: |
          cd ios
          time bundle exec fastlane build_app_for_simulator
        env:
          BUNDLE_VERSION: ${GITHUB_RUN_NUMBER}
          BUNDLE_SHORT_VERSION: ${{ github.event.inputs.bundle_short_version }}

      - name: Post - ccache statastics
        run: ccache -s

      - name: Upload ipa, dSYM (debug symbol)
        uses: actions/upload-artifact@v3
        with:
          path: |
            ios/catalystDemoReactNative.app.dSYM.zip
            ios/catalystDemoReactNative.ipa
            ~/Library/Developer/Xcode/DerivedData/catalystDemoReactNative-*/Build/Products/Release-iphonesimulator/catalystDemoReactNative.app
